{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AD\\\\Documents\\\\GitHub\\\\Language_Bridge\\\\src\\\\containers\\\\HomePage\\\\index.js\";\n\n/* eslint-disable react/button-has-type */\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable react/jsx-filename-extension */\n\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport './style.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from '../../components/Layout';\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\n\nconst User = props => {\n  const {\n    user,\n    onClick\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => onClick(user),\n    className: \"displayName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profileImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, user.firstName.charAt(0)), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flex: 1,\n      justifyContent: 'space-between',\n      margin: '0 10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, user.firstName, ' ', user.lastName), /*#__PURE__*/React.createElement(\"span\", {\n    className: user.isOnline ? 'onlineStatus' : 'onlineStatus off',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const user = useSelector(state => state.user);\n  const [metUsers, setMetUsers] = useState([]);\n  const [chatStarted, setChatStarted] = useState(false);\n  const [chatUser, setChatUser] = useState('');\n  const [message, setMessage] = useState('');\n  const [userUid, setUserUid] = useState(null);\n  let unsubscribe;\n  useEffect(() => {\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid)).then(unsub => unsub).catch(error => {\n      console.log(error);\n    });\n  }, []); // console.log(user);\n  // componentWillUnmount\n\n  useEffect(() => () => {\n    // cleanup\n    unsubscribe.then(f => f()).catch(error => console.log(error));\n  }, []);\n  useEffect(() => {\n    if (auth && auth.uid) {\n      dispatch(getRealtimeConversations({\n        uid_1: auth.uid\n      }));\n    }\n  }, [auth]);\n  useEffect(() => {\n    if (user && user.users && user.users.length && user.metUsers && user.metUsers.length) {\n      setMetUsers(user.metUsers.map(id => user.users.find(user => user.uid === id) || null).filter(u => u !== null));\n    }\n  }, [user]);\n\n  const initChat = _user => {\n    setChatStarted(true);\n    setChatUser(`${_user.firstName} ${_user.lastName}`);\n    setUserUid(_user.uid);\n    console.log(_user);\n  };\n\n  const submitMessage = () => {\n    const msgObj = {\n      user_uid_1: auth.uid,\n      user_uid_2: userUid,\n      message\n    };\n\n    if (message !== '') {\n      dispatch(updateMessage(msgObj)).then(() => {\n        setMessage('');\n      });\n    } // console.log(msgObj);\n\n  };\n\n  const selectNewContact = () => {\n    if (user && user.users && user.users.length) {\n      const newUsers = user.users.filter(u => !user.metUsers.includes(u.uid));\n      return newUsers.filter(u => {\n        let i = 0;\n        auth.unknown.forEach(lang => {\n          if (u.known.reduce((prev, curr) => prev || curr.toLowerCase() === lang.toLowerCase(), false)) i += 1;\n        });\n        if (i > 0) return true;\n        return false;\n      }).sort((a, b) => {\n        let ai = 0;\n        let bi = 0;\n        auth.interests.forEach(inter => {\n          if (a.interests.reduce((prev, curr) => prev || curr.toLowerCase() === inter.toLowerCase(), false)) ai += 1;\n          if (b.interests.reduce((prev, curr) => prev || curr.toLowerCase() === inter.toLowerCase(), false)) bi += 1;\n        });\n        return bi - ai;\n      })[0];\n    }\n\n    return null;\n  };\n\n  const newConversation = () => {\n    const newuser = selectNewContact();\n    console.log({\n      newuser\n    });\n\n    if (!newuser) {\n      alert('No match found :(');\n      return;\n    }\n\n    const msgObj = {\n      user_uid_1: auth.uid,\n      user_uid_2: newuser.uid,\n      message: 'Hello!'\n    };\n    dispatch(updateMessage(msgObj)).then(() => {\n      setMessage('');\n    }); // console.log(msgObj);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfUsers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"name2\",\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, auth.authenticated ? `${auth.firstName} ${auth.lastName}` : ''), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: newConversation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"New conversation\")), metUsers && metUsers.length > 0 ? metUsers.map(user => /*#__PURE__*/React.createElement(User, {\n    onClick: () => initChat(user),\n    key: user.uid,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, chatStarted ? chatUser : ''), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageSections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, chatStarted ? user.conversations && user.conversations.filter(c => c.user_uid_1 === (auth && userUid) || c.user_uid_2 === (auth && userUid)).map(con => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: con.user_uid_1 === auth.uid ? 'right' : 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"messageStyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, con.message))) : null), chatStarted ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatControls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    placeholder: \"Type a Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Send\")) : null)));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/AD/Documents/GitHub/Language_Bridge/src/containers/HomePage/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Layout","getRealtimeUsers","updateMessage","getRealtimeConversations","User","props","user","onClick","firstName","charAt","display","flex","justifyContent","margin","fontWeight","lastName","isOnline","HomePage","dispatch","auth","state","metUsers","setMetUsers","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","unsubscribe","uid","then","unsub","catch","error","console","log","f","uid_1","users","length","map","id","find","filter","u","initChat","_user","submitMessage","msgObj","user_uid_1","user_uid_2","selectNewContact","newUsers","includes","i","unknown","forEach","lang","known","reduce","prev","curr","toLowerCase","sort","a","b","ai","bi","interests","inter","newConversation","newuser","alert","padding","authenticated","conversations","c","con","textAlign","e","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Layout from '../../components/Layout';\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\r\n\r\nconst User = (props) => {\r\n  const { user, onClick } = props;\r\n\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n      <div className=\"profileImage\" >\r\n      {user.firstName.charAt(0)}\r\n      </div>\r\n      <div style={{\r\n        display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px',\r\n      }}\r\n      >\r\n        <span style={{ fontWeight: 500 }}>\r\n          {user.firstName}\r\n          {' '}\r\n          {user.lastName}\r\n        </span>\r\n        <span className={user.isOnline ? 'onlineStatus' : 'onlineStatus off'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const [metUsers, setMetUsers] = useState([]);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n      .then((unsub) => unsub)\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // console.log(user);\r\n\r\n  // componentWillUnmount\r\n  useEffect(() => () => {\r\n    // cleanup\r\n    unsubscribe.then((f) => f()).catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth && auth.uid) {\r\n      dispatch(getRealtimeConversations({ uid_1: auth.uid }));\r\n    }\r\n  }, [auth]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.users && user.users.length\r\n      && user.metUsers && user.metUsers.length) {\r\n      setMetUsers(\r\n        user.metUsers.map(\r\n          (id) => user.users.find((user) => user.uid === id) || null,\r\n        ).filter((u) => u !== null),\r\n      );\r\n    }\r\n  }, [user]);\r\n\r\n  const initChat = (_user) => {\r\n    setChatStarted(true);\r\n    setChatUser(`${_user.firstName} ${_user.lastName}`);\r\n    setUserUid(_user.uid);\r\n\r\n    console.log(_user);\r\n  };\r\n\r\n  const submitMessage = () => {\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message,\r\n    };\r\n\r\n    if (message !== '') {\r\n      dispatch(updateMessage(msgObj))\r\n        .then(() => {\r\n          setMessage('');\r\n        });\r\n    }\r\n\r\n    // console.log(msgObj);\r\n  };\r\n\r\n  const selectNewContact = () => {\r\n    if (user && user.users && user.users.length) {\r\n      const newUsers = user.users.filter((u) => !(user.metUsers.includes(u.uid)));\r\n      return newUsers.filter((u) => {\r\n        let i = 0;\r\n        auth.unknown.forEach((lang) => {\r\n          if (u.known.reduce((prev, curr) => (prev || curr.toLowerCase() === lang.toLowerCase()), false)) i += 1;\r\n        });\r\n        if (i > 0) return true;\r\n        return false;\r\n      }).sort((a, b) => {\r\n        let ai = 0;\r\n        let bi = 0;\r\n        auth.interests.forEach((inter) => {\r\n          if (a.interests.reduce((prev, curr) => (prev || curr.toLowerCase() === inter.toLowerCase()), false)) ai += 1;\r\n          if (b.interests.reduce((prev, curr) => (prev || curr.toLowerCase() === inter.toLowerCase()), false)) bi += 1;\r\n        });\r\n        return bi - ai;\r\n      })[0];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const newConversation = () => {\r\n    const newuser = selectNewContact();\r\n    console.log({newuser});\r\n\r\n    if (!newuser) {\r\n      alert('No match found :(');\r\n      return;\r\n    }\r\n\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: newuser.uid,\r\n      message: 'Hello!',\r\n    };\r\n\r\n    dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('');\r\n      });\r\n\r\n    // console.log(msgObj);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n      \r\n        <div className=\"listOfUsers\">\r\n        <div className=\"name2\" style={{padding:'10px'}}>\r\n            {auth.authenticated ? `${auth.firstName} ${auth.lastName}` : ''}\r\n           \r\n          </div>\r\n          <div style={{ padding: '10px' }}>\r\n            <button onClick={newConversation}>New conversation</button>\r\n          </div>\r\n\r\n          {\r\n            metUsers && metUsers.length > 0\r\n              ? metUsers.map((user) => (\r\n                <User\r\n                  onClick={() => initChat(user)}\r\n                  key={user.uid}\r\n                  user={user}\r\n                />\r\n              )) : null\r\n          }\r\n\r\n        </div>\r\n\r\n        <div className=\"chatArea\">\r\n\r\n          <div className=\"chatHeader\">\r\n            {\r\n              chatStarted ? chatUser : ''\r\n            }\r\n          </div>\r\n          <div className=\"messageSections\">\r\n            {\r\n                  chatStarted\r\n                    ? user.conversations && user.conversations.filter(\r\n                      (c) => c.user_uid_1 === (auth && userUid)\r\n                      || c.user_uid_2 === (auth && userUid),\r\n                    ).map((con) => (\r\n                      <div style={{ textAlign: con.user_uid_1 === auth.uid ? 'right' : 'left' }}>\r\n                        <p className=\"messageStyle\">{con.message}</p>\r\n                      </div>\r\n                    ))\r\n                    : null\r\n                }\r\n\r\n          </div>\r\n          {\r\n              chatStarted\r\n                ? (\r\n                  <div className=\"chatControls\" >\r\n                    <textarea\r\n                      value={message}\r\n                      onChange={(e) => setMessage(e.target.value)}\r\n                      placeholder=\"Type a Message\"\r\n                    />\r\n                    <button onClick={submitMessage}>Send</button>\r\n                  </div>\r\n                ) : null\r\n            }\r\n\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}