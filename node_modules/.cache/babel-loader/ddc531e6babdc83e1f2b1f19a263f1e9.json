{"ast":null,"code":"import { userConstants } from '../actions/constants';\nconst intiState = {\n  users: [],\n  conversations: [],\n  metUsers: []\n};\nexport default ((state = intiState, action) => {\n  let newState = {};\n\n  switch (action.type) {\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\n      break;\n\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\n      newState = { ...state,\n        users: action.payload.users\n      };\n      break;\n\n    case userConstants.GET_REALTIME_MESSAGES:\n      newState = { ...state,\n        conversations: [...(state.conversations && state.conversations.length ? state.conversations : []), ...action.payload.conversations]\n      };\n      newState.metUsers = newState.conversations.reduce((prev, current) => {\n        if (!prev.includes(current.user_uid_1)) prev.push(current.user_uid_1);\n        if (!prev.includes(current.user_uid_2)) prev.push(current.user_uid_2);\n        return prev;\n      }, []);\n      break;\n\n    case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\n      newState = { ...state,\n        conversations: []\n      };\n      break;\n\n    default:\n  }\n\n  return newState;\n});","map":{"version":3,"sources":["C:/Users/AD/Documents/GitHub/Language_Bridge/src/reducers/user.reducer.js"],"names":["userConstants","intiState","users","conversations","metUsers","state","action","newState","type","GET_REALTIME_USERS","payload","GET_REALTIME_MESSAGES","length","reduce","prev","current","includes","user_uid_1","push","user_uid_2"],"mappings":"AAAA,SAASA,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,aAAa,EAAE,EAFC;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAAlB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAC5C,MAAIC,QAAQ,GAAG,EAAf;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAM,GAAER,aAAa,CAACS,kBAAmB,UAAzC;AACE;;AACF,SAAM,GAAET,aAAa,CAACS,kBAAmB,UAAzC;AACEF,MAAAA,QAAQ,GAAG,EACT,GAAGF,KADM;AAETH,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAAP,CAAeR;AAFb,OAAX;AAIA;;AACF,SAAKF,aAAa,CAACW,qBAAnB;AACEJ,MAAAA,QAAQ,GAAG,EACT,GAAGF,KADM;AAETF,QAAAA,aAAa,EAAE,CACb,IAAIE,KAAK,CAACF,aAAN,IAAuBE,KAAK,CAACF,aAAN,CAAoBS,MAA3C,GAAoDP,KAAK,CAACF,aAA1D,GAA0E,EAA9E,CADa,EAEb,GAAGG,MAAM,CAACI,OAAP,CAAeP,aAFL;AAFN,OAAX;AAOAI,MAAAA,QAAQ,CAACH,QAAT,GAAoBG,QAAQ,CAACJ,aAAT,CAAuBU,MAAvB,CAA8B,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACnE,YAAI,CAACD,IAAI,CAACE,QAAL,CAAcD,OAAO,CAACE,UAAtB,CAAL,EAAwCH,IAAI,CAACI,IAAL,CAAUH,OAAO,CAACE,UAAlB;AACxC,YAAI,CAACH,IAAI,CAACE,QAAL,CAAcD,OAAO,CAACI,UAAtB,CAAL,EAAwCL,IAAI,CAACI,IAAL,CAAUH,OAAO,CAACI,UAAlB;AACxC,eAAOL,IAAP;AACD,OAJmB,EAIjB,EAJiB,CAApB;AAKA;;AACF,SAAM,GAAEd,aAAa,CAACW,qBAAsB,UAA5C;AACEJ,MAAAA,QAAQ,GAAG,EACT,GAAGF,KADM;AAETF,QAAAA,aAAa,EAAE;AAFN,OAAX;AAIA;;AACF;AA7BF;;AAgCA,SAAOI,QAAP;AACD,CAnCD","sourcesContent":["import { userConstants } from '../actions/constants';\r\n\r\nconst intiState = {\r\n  users: [],\r\n  conversations: [],\r\n  metUsers: [],\r\n};\r\n\r\nexport default (state = intiState, action) => {\r\n  let newState = {};\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      break;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      newState = {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n      break;\r\n    case userConstants.GET_REALTIME_MESSAGES:\r\n      newState = {\r\n        ...state,\r\n        conversations: [\r\n          ...(state.conversations && state.conversations.length ? state.conversations : []),\r\n          ...action.payload.conversations,\r\n        ],\r\n      };\r\n      newState.metUsers = newState.conversations.reduce((prev, current) => {\r\n        if (!prev.includes(current.user_uid_1)) prev.push(current.user_uid_1);\r\n        if (!prev.includes(current.user_uid_2)) prev.push(current.user_uid_2);\r\n        return prev;\r\n      }, []);\r\n      break;\r\n    case `${userConstants.GET_REALTIME_MESSAGES}_FAILURE`:\r\n      newState = {\r\n        ...state,\r\n        conversations: [],\r\n      };\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return newState;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}